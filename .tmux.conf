##################################3############################################
#  ~/.tmux.conf                                                               #
##################################3############################################
#                                                                             #
#  TMux init-config file                                                      #
#  -------------------------------------------------------------------------  #
#  Author: Tomasz Rak                                                         #
#                                                                             #
##################################3############################################

# tat command creates and attach to session named as pwd

# SETTING OPTIONS
set -g default-shell /bin/bash
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -w -g xterm-keys on
set -g status-keys emacs
set -g mode-keys vi  # in copy-mode
#setw -g utf8 on
#set -g status-utf8 on
set -s exit-empty off
set -g history-limit 10000
set -g wrap-search on
set -sg escape-time 10
set -g repeat-time 300   # ?ms after prefix for command
setw -g aggressive-resize on
set -g focus-events on
set -g mouse on
set -g set-clipboard off

# BINDINGS KEYS
# option -r for repeat or -n for no prefix
# PREFIX assign to Ctr+Space because vim leader is Space
unbind C-b
unbind C-Space
set -g prefix C-Space
# Ctr+Space and Space again for last window switching
bind Space last-window
# prefix twice for session switching
bind C-Space switch-client -1
# prefix twice for sending prefix to next app
#bind C-Space send-prefix
# semicollon is quicker then collon
bind \; command-prompt
# yes r is for reloading, resourcing, refreshing
unbind r
bind r source-file ~/.tmux.conf \; display-message " ! ~/.tmux.conf Reloaded !"
# for options menu <prefix>+O (in newer versions)
bind O customize-mode 
# new window creation
bind c new-window -c '#{pane_current_path}' 
bind C command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"
# window switching like browser-tabs  --doesnt work
bind -n C-Tab next-window
bind -n C-S-Tab previous-window
#bind -r H previous-window
#bind -r L next-window
bind -nr M-S-Left swap-window -t -1
bind -nr M-S-Right swap-window -t +1
# splits/panes creation
bind -r v split-window -h -p 50 -c '#{pane_current_path}' # hor-split for active p
bind -r s split-window -v -p 50 -c '#{pane_current_path}' # ver-split for active p
bind -r V split-window -fh -c '#{pane_current_path}' # hor-split for whole screen
bind -r S split-window -fv -c '#{pane_current_path}' # v-split for screen
bind \\ split-window -h 
bind - split-window -v
# synchronization panes by pref+a
bind a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
# panes navigation
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-M-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-M-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-M-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-M-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-Mk\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-M-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind C-w display-popup -E "tmux list-sessions | sed -E 's/:.*$//' |\
    grep -v \"^$(tmux display-message -p '#S')\$\" |\
    fzf --reverse | xargs tmux switch-client -t"

# resize panes
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5
# break free or join panes
bind b break-pane   # with focus
bind B break-pane -d   # without focus
bind J join-pane -b -s !

# with <prefix>+[ go to copy-mode
# to put quick selection to tmux buffer (no clipboard):
# select with <space> go out with <enter> then paste with <prefix>+]
# using v and y puts last selection also to clipboard using ext app
# needs xclip or xsel for X11/ wl-copy for Wayland/ clip.exe for macOS or WSL
# <prefix>+= opens all tmux buffers to paste from one of them
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard -i"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"
bind -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind -n C-S-v paste-buffer

# look and feel
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g set-titles on
set -g automatic-rename on
setw -g monitor-activity on
set -g visual-activity off  # annoying X activity

setw -g window-style "fg=default,bg=#3d3e4a" #fg=default,bg=default"
setw -g window-active-style "fg=default,bg=#282936" #2C001E" for Ubuntu-color
set -g pane-border-style "fg=black,bg=#3d3e4a"
set -ga pane-active-border-style "fg=white,bg=#3d3e4a"
# status-bar
set -g status-interval 120
set -g status-position bottom
set -g status-justify left
set -g status-style "fg=white,bg=#3d3e4a"
set -g window-status-format "|#I:[#{session_id}:#{window_id}.#{pane_id}] #W#F|"
set -g window-status-separator ""
set -g window-status-current-format "#[bold] #I:[#{session_id}:#{window_id}.#{pane_id}] #W#F "
set -g window-status-current-style "bg=#282936" #"bg=#2C001E"
set -g status-left-length 30
set -g status-left "#{prefix_highlight}#[fg=blue,bg=#282936]#[bold][#S]"
set -g status-right-length 90
set -g status-right "#[fg=blue]#[bold]@#H(#(ip -4 -br a | grep UP | awk '{print $3}' | cut -f1 -d'/'))#[fg=default]extIP:#(curl ipinfo.io/ip)#[fg=blue]#[nobold]|Cont:#{continuum_status}|#[fg=default]#[nobold]#(/usr/local/bin/battery -t)|%d.%m.%y #[bold]%H:%M"
#set -g stt -ag message-style "fg=white,bold,bg=black"

# PLUGINS with TPM
# <prefix>+I -installs, <prefix+U> -updates plugins <prefix+alt+u> -uninstall not listed
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# nice tmux-statusline-indicator
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
 set -g @prefix_highlight_output_prefix ' '
 set -g @prefix_highlight_output_suffix ' '
 set -g @prefix_highlight_empty_has_affixes 'on'  # default 'off'
 set -g @prefix_highlight_empty_prompt 'TMUX'
 set -g @prefix_highlight_empty_attr 'fg=default,bg=default' 
 set -g @prefix_highlight_prefix_prompt 'WAIT'
 set -g @prefix_highlight_fg 'white'  # default 'colour231'
 set -g @prefix_highlight_bg 'red'   # default 'colour04'
 set -g @prefix_highlight_show_copy_mode 'on'
 set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default 'fg=default,bg=yellow'
 set -g @prefix_highlight_show_sync_mode 'on'
 set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default 'fg=default,bg=yellow'
# selection in copy mode: <o> -opens, <C+o> -opens in editor, <S+s> -searches
set -g @plugin 'tmux-plugins/tmux-open'
  set -g @open-S 'https://www.duckduckgo.com/'
# <prefix>+<C+s> -save session, <prefix+C+r> -restore session
set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @resurrect-strategy-vim 'session'
  set -g @resurrect-strategy-nvim 'session'
  set -g @resurrect-capture-pane-contents 'on'
  # automaticly starts and restores tmux when turned on
set -g @plugin 'tmux-plugins/tmux-continuum'
  set -g @continuum-boot 'on'
  set -g @continuum-restore 'on'
  set -g @continuum-systemd-start-cmd 'new-session -d'

# TMUX-FZF-Menu open with <prefix>+<C+f>
set -g @plugin 'sainnhe/tmux-fzf'
  TMUX_FZF_LAUNCH_KEY="C-f"
  TMUX_FZF_OPTIONS="-p -w 60% -h 60% -m"
  # to make extra menu position
  #TMUX_FZF_MENU=\
"projects\necho 'Hello!'\n"\
"bar\nls ~\n"

# automaticly installs plugins on new machine when not installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
   ~/.tmux/plugins/tpm/bin/install_plugins'"

# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
